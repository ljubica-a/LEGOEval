[{"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/index.js":"1","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/reportWebVitals.js":"2","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/App.js":"3","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Start.js":"4","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Page.js":"5","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/LoadMTurk.js":"6","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/RandomExample.js":"7","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/SubmitMTurk.js":"8","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Survey.js":"9","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/chatbot/Chatbot.js":"10","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/CompareChats.js":"11"},{"size":500,"mtime":1614973070631,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1614973070631,"results":"14","hashOfConfig":"13"},{"size":272,"mtime":1614973070628,"results":"15","hashOfConfig":"13"},{"size":2057,"mtime":1615998201082,"results":"16","hashOfConfig":"13"},{"size":1177,"mtime":1614976961955,"results":"17","hashOfConfig":"13"},{"size":1461,"mtime":1614973070629,"results":"18","hashOfConfig":"13"},{"size":1160,"mtime":1614973070629,"results":"19","hashOfConfig":"13"},{"size":1573,"mtime":1614973070629,"results":"20","hashOfConfig":"13"},{"size":3423,"mtime":1614973070629,"results":"21","hashOfConfig":"13"},{"size":2957,"mtime":1614977577603,"results":"22","hashOfConfig":"13"},{"size":3558,"mtime":1616003670444,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12se7gu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"26"},"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/index.js",[],["56","57"],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/reportWebVitals.js",[],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/App.js",["58"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Start from './Start';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">        \n        <Start />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Start.js",["59"],"import React from 'react';\nimport axios from 'axios';\n\n\nimport Page from './Page';\nimport RandomExample from './RandomExample';\nimport LoadMTurk from './LoadMTurk';\nimport SubmitMTurk from './SubmitMTurk';\nimport Survey from './Survey'\nimport MyChatbot from \"./chatbot/Chatbot\";\nimport CompareChats from \"./CompareChats\";\n// Import your new components here!\n\n\nclass Start extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n      this.getLatestState();\n    }    \n        \n    getLatestState = () => {      \n      // const url = window.location.href;\n      const url = window.location.href.split('?')[0];\n      axios.get(url+ \"/init\").then((res) => {        \n        if (res != null) {\n          this.setState(res.data);\n        }         \n      }).catch((error)=>{\n        console.log(error);\n     });\n    }\n\n    render() {      \n      return (\n        <div>\n          {(() => {\n            \n            if (this.state.pipeline == undefined) return <p>Loading...</p>;\n\n            const name = this.state.pipeline[0].name; \n            \n            switch (name) {\n\n              case 'Page':\n                return <Page advance={this.getLatestState}/>;\n\n              case 'RandomExample':\n                return <RandomExample advance={this.getLatestState}/>;\n\n              case 'LoadMTurk':\n                return <LoadMTurk advance={this.getLatestState}/>;\n\n              case 'SubmitMTurk':\n                return <SubmitMTurk advance={this.getLatestState}/>;\n\n              case 'Survey':\n                return <Survey advance={this.getLatestState}/>;\n\n              case 'MyChatbot':\n                return <MyChatbot advance={this.getLatestState}/>;\n\n              case 'CompareChats':\n                return <CompareChats advance={this.getLatestState}/>;\n\n              // Add more components here :)\n\n              default:\n                return <p>Unknown component!</p>;\n            }\n          })()}\n        </div>\n      );\n    }   \n}\n\n\nexport default Start;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Page.js",["60"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass Page extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {\n        const url = window.location.href.split('?')[0]; \n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data);\n        })      \n    }\n\n    render() {\n      if (this.state.pipeline == undefined) return <p>Loading...</p>;      \n      const data = this.state.pipeline[0].data;\n      return (\n        <div>            \n            <h1>{data.title}</h1>            \n            <p>{data.description}</p>\n            <Button onClick={this.popComponent} variant=\"contained\" color=\"primary\">{data.button_name}</Button>            \n        </div>\n      );\n    }    \n\n    popComponent = () => {\n        const url = window.location.href.split('?')[0];            \n        axios.post(url+ \"/update\", \n        Object.assign({}, this.state, {instruction: 'advance'})).then(res => {\n            this.setState(res.data);             \n            this.props.advance();             \n        })\n    }\n}\n\n\nexport default Page;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/LoadMTurk.js",[],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/RandomExample.js",["61"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass RandomExample extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n        // const url = window.location.href;            \n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data);\n        })      \n    }\n\n    render() {\n\n      if (this.state.pipeline == undefined) return <p>Loading...</p>;     \n\n      const data = this.state.pipeline[0].data;\n\n      return (                    \n        <Button onClick={this.printInBackend} variant=\"contained\" color=\"primary\">{data.button_name}</Button>        \n      );\n    }    \n\n    printInBackend = () => {        \n        // const url = window.location.href;    \n        const url = window.location.href.split('?')[0];        \n        axios.post(url+ \"/update\", Object.assign({}, this.state, {instruction: 'print'})).then(res => {\n            this.setState(res.data);                     \n        })\n    }\n}\n\n\nexport default RandomExample; //here","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/SubmitMTurk.js",["62"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass SubmitMTurk extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n        this.setState({complete: false});\n        // const url = window.location.href;            \n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data, function() {\n                this.notifyBackendToCompleteTask();\n            });            \n        })      \n    }\n\n    render() {\n        if (this.state.pipeline == undefined) return <p>Loading...</p>;\n        return (\n            <form name=\"mturk_form\" method=\"post\" id=\"mturk_form\" action={this.state.mturk.end_point}>\n                <input type=\"hidden\" value={this.state.mturk.assignment_id} name=\"assignmentId\" id={this.state.mturk.assignment_id}/>\n                <input type=\"hidden\" value='foo' name=\"bar\"/>\n                <input type=\"hidden\" value={this.state.mturk.end_point} name = \"end_point\"/>\n                <Button type=\"submit\">Click here to finish task</Button>\n            </form>\n        );     \n    }\n\n    notifyBackendToCompleteTask = () => {        \n        const url = window.location.href.split('?')[0]; \n        axios.post(url+ \"/update\",\n        Object.assign({}, this.state, {instruction: 'mark_complete', complete: true})).then(res => {            \n            this.setState(res.data);            \n        })\n    }\n}\n\n\nexport default SubmitMTurk;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Survey.js",["63"],"import React from 'react';\nimport axios from 'axios';\n\nimport * as Surveys from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass Survey extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {\n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data);\n        })\n    }\n\n    render() {\n        if (this.state.pipeline == undefined) return <p>Loading...</p>;\n\n        const data = this.state.pipeline[0].data;\n        let json = {};\n        if (data.hasOwnProperty(\"questions\")) {\n            json = {title: data.title, showProgressBar: \"top\", questions: []}\n            for (var i = 0; i < data.questions.length; i++) {\n                json.questions.push(this.parseQuestion(JSON.parse(data.questions[i])));\n            }\n        }\n        let model = new Surveys.Model(json);\n\n        return (\n          <Surveys.Survey model={model} onComplete={this.popComponent}/>\n        );\n    }\n\n    parseQuestion(question) {\n        let parsed;\n        switch (question[\"type\"]){\n            case \"radiogroup\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"],\n                        isRequired: question[\"isRequired\"], colCount: question[\"colCount\"],\n                        choices: question[\"choices\"]};\n                break;\n            case \"checkbox\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"],\n                        isRequired: question[\"isRequired\"], colCount: question[\"colCount\"],\n                        hasNone: question[\"hasNone\"], choices: question[\"choices\"]};\n                break;\n            case \"text\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"],\n                        isRequired: question[\"isRequired\"], placeHolder: question[\"placeHolder\"],\n                        autoComplete: question[\"autoComplete\"]};\n                break;\n            case \"rating\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"],\n                        minRateDescription: question[\"minRateDescription\"],\n                        maxRateDescription: question[\"maxRateDescription\"]};\n                break;\n            case \"comment\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"]};\n                break;\n            case \"matrix\":\n                parsed = { type: question[\"type\"], name: question[\"name\"], title: question[\"title\"],\n                        columns: question[\"columns\"], rows: question[\"rows\"]};\n                break;\n            default:\n                parsed = {};\n        }\n        return parsed;\n    }\n\n    popComponent = (survey, options) => {\n\n        const data = this.state.pipeline[0].data;\n\n        var surveyTitleStr = data.title;\n        var surveyData = JSON.stringify(survey.data);\n\n        var updateVal = {};\n        updateVal['instruction'] = 'advance';\n        updateVal[surveyTitleStr] = surveyData\n\n        const url = window.location.href.split('?')[0];\n        axios.post(url+ \"/update\", Object.assign({}, this.state, updateVal)).then(res => {\n            this.setState(res.data);\n            this.props.advance();\n        })\n    }\n\n}\n\nexport default Survey;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/chatbot/Chatbot.js",["64","65","66","67"],"import React from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport '../App.css';\n\n\nclass MessageList extends React.Component {\n  render() {\n    return (      \n        <div className=\"message-list\" style={{width: 500}}>                 \n            {this.props.messages.map(message => {\n                return (\n                  <div class=\"bubbleWrapper\">\n                    <div class={\"You\" == message.senderId ? \"inlineContainer own\" : \"inlineContainer\"}>\n                      <div className={\"You\" != message.senderId ?\"otherBubble other\" : \"ownBubble own\"}>{message.text}</div>\n                    </div>\n                    <span className={\"You\" != message.senderId ?\"other\" : \"own\"}>{message.senderId}</span>\n                  </div>\n                )\n              })\n            }\n      </div>\n    )\n  }\n}\n\n\nclass MyChatbot extends React.Component{\n\n    constructor(props) {\n      super(props);\n      this.state = {messages: [], text: \"\"};      \n    }\n\n    componentDidMount() {\n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data, function() {\n              // pass\n            });\n        })\n    }\n\n    render() {\n        if (this.state.pipeline === undefined) return <p>Loading...</p>;\n        const data = this.state.pipeline[0].data;\n        return (\n          <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', flexDirection: 'column'}}>\n            <p style = {{marginBottom: 20}}>Please send messages until the task will automatically end.</p>\n              <MessageList messages={this.state.messages} />\n              <input type=\"text\" placeholder=\"Type message here...\" value={this.state.text} onChange={this.textChanged} style={{marginTop: 40}} />\n              <Button onClick={this.sendMessage}>Send</Button>               \n            </div>\n          );\n    }\n\n    textChanged = (e) => {\n      this.setState({ text: e.target.value });\n    }\n\n    sendMessage = () => {\n\n      //TODO: disable UI\n\n      // Update the user's message\n      var data = this.state.messages;\n      data.push(\n        {id: this.state.messages.length, senderId: \"You\", text: this.state.text}\n      );\n\n      this.setState({messages: data, text: \"\"}, function() {\n\n        // Send to backend, update data\n        var title = this.state.pipeline[0].data.identifier;\n        var updateVal = {};\n        updateVal[title] = this.state.messages;\n        updateVal['instruction'] = 'request_message';\n        const url = window.location.href.split('?')[0];\n        axios.post(url+ \"/update\", Object.assign({}, this.state, updateVal)).then(res => {        \n          this.setState(res.data, function() { this.popComponent(); });\n\n          //TODO: enable UI\n        })\n\n      }); \n    }\n\n    popComponent = (chatbot, options) => {\n      this.props.advance();\n    }\n}\n\nexport default MyChatbot;",["68","69"],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/CompareChats.js",["70","71","72"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\n/*\nInitial:\n- an identifer\n- chatbotA\n- chatbotB\n- text\n\nSet:\n- compare_bot_a\n- compare_bot_b\n\ninst:\n- load_comparison\n*/\n\n\nclass MessageList extends React.Component {\n    render() {\n      return (      \n          <div className=\"message-list\" style={{width: 500}}>                 \n              {this.props.messages.map(message => {\n                  return (\n                    <div class=\"bubbleWrapper\">\n                      <div class={\"bot_a\" == message.senderId ? \"inlineContainer own\" : \"inlineContainer\"}>\n                        <div className={\"bot_a\" != message.senderId ?\"otherBubble other\" : \"ownBubble own\"}>{message.text}</div>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n        </div>\n      )\n    }\n  }\n\n\nclass CompareChats extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {compare_bot_a: [], compare_bot_b: [], compare_bot_preference: \"\"}; \n    }\n\n    componentDidMount() {\n        const url = window.location.href.split('?')[0]; \n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data, function() {\n                axios.post(url+ \"/update\", Object.assign({}, this.state, {instruction: 'load_comparison'})).then(result => {            \n                    this.setState(result.data);     \n                });\n            });\n        })      \n    }\n\n    render() {\n      if (this.state.pipeline == undefined) return <p>Loading...</p>;      \n      const data = this.state.pipeline[0].data;\n      return (\n        <div>\n            <p style = {{marginBottom: 20}}>{data.text}</p>\n        \n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', flexDirection: 'row'}}>\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', flexDirection: 'column'}}>            \n                    <MessageList messages={this.state.compare_bot_a} />\n                    <Button onClick={this.chooseConvoA}>Choose This Conversation</Button>    \n                </div>\n\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', flexDirection: 'column'}}>            \n                    <MessageList messages={this.state.compare_bot_b} />\n                    <Button onClick={this.chooseConvoB}>Choose This Conversation</Button>    \n                </div>\n            </div>\n        </div>\n      );\n    }   \n    \n    chooseConvoA = () => {\n        const data = this.state.pipeline[0].data;\n        this.setState({compare_bot_preference: data.chatbotA}, function() {\n            this.popComponent();\n        });\n    }\n\n    chooseConvoB = () => {\n        const data = this.state.pipeline[0].data;\n        this.setState({compare_bot_preference: data.chatbotB}, function() {\n            this.popComponent();\n        });\n    }    \n\n    popComponent = () => {    \n        var title = this.state.pipeline[0].data.identifier;\n        var updateVal = {};\n        updateVal[title] = this.state.compare_bot_preference;\n        updateVal['instruction'] = 'advance';\n        const url = window.location.href.split('?')[0];\n        axios.post(url+ \"/update\", Object.assign({}, this.state, updateVal)).then(res => {        \n          this.setState(res.data, function() { \n                this.props.advance();\n            });\n        })\n    }\n}\n\n\nexport default CompareChats;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":43,"column":37,"nodeType":"83","messageId":"84","endLine":43,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":21,"column":31,"nodeType":"83","messageId":"84","endLine":21,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":23,"column":31,"nodeType":"83","messageId":"84","endLine":23,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":25,"column":33,"nodeType":"83","messageId":"84","endLine":25,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":22,"column":33,"nodeType":"83","messageId":"84","endLine":22,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":14,"column":39,"nodeType":"83","messageId":"84","endLine":14,"endColumn":41},{"ruleId":"81","severity":1,"message":"85","line":15,"column":45,"nodeType":"83","messageId":"84","endLine":15,"endColumn":47},{"ruleId":"81","severity":1,"message":"85","line":17,"column":44,"nodeType":"83","messageId":"84","endLine":17,"endColumn":46},{"ruleId":"77","severity":1,"message":"86","line":46,"column":15,"nodeType":"79","messageId":"80","endLine":46,"endColumn":19},{"ruleId":"73","replacedBy":"87"},{"ruleId":"75","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"82","line":29,"column":43,"nodeType":"83","messageId":"84","endLine":29,"endColumn":45},{"ruleId":"81","severity":1,"message":"85","line":30,"column":49,"nodeType":"83","messageId":"84","endLine":30,"endColumn":51},{"ruleId":"81","severity":1,"message":"82","line":61,"column":31,"nodeType":"83","messageId":"84","endLine":61,"endColumn":33},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.",["89"],["90"],"no-global-assign","no-unsafe-negation"]
[{"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/index.js":"1","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/reportWebVitals.js":"2","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/App.js":"3","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Start.js":"4","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Page.js":"5","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/LoadMTurk.js":"6","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/RandomExample.js":"7","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/SubmitMTurk.js":"8","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Survey.js":"9"},{"size":500,"mtime":1614278926455,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1614278926456,"results":"12","hashOfConfig":"11"},{"size":272,"mtime":1614278926453,"results":"13","hashOfConfig":"11"},{"size":1765,"mtime":1614279193240,"results":"14","hashOfConfig":"11"},{"size":1186,"mtime":1614279133691,"results":"15","hashOfConfig":"11"},{"size":1461,"mtime":1614279133691,"results":"16","hashOfConfig":"11"},{"size":1160,"mtime":1614279133692,"results":"17","hashOfConfig":"11"},{"size":1573,"mtime":1614279133692,"results":"18","hashOfConfig":"11"},{"size":3423,"mtime":1614281195254,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12se7gu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/index.js",[],["44","45"],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/reportWebVitals.js",[],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/App.js",["46"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Start from './Start';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">        \n        <Start />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Start.js",["47"],"import React from 'react';\nimport axios from 'axios';\n\n\nimport Page from './Page';\nimport RandomExample from './RandomExample';\nimport LoadMTurk from './LoadMTurk';\nimport SubmitMTurk from './SubmitMTurk';\nimport Survey from './Survey'\n// Import your new components here!\n\n\nclass Start extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n      this.getLatestState();\n    }    \n        \n    getLatestState = () => {      \n      // const url = window.location.href;\n      const url = window.location.href.split('?')[0];\n      axios.get(url+ \"/init\").then((res) => {        \n        if (res != null) {\n          this.setState(res.data);\n        }         \n      }).catch((error)=>{\n        console.log(error);\n     });\n    }\n\n    render() {      \n      return (\n        <div>\n          {(() => {\n            \n            if (this.state.pipeline == undefined) return <p>Loading...</p>;\n\n            const name = this.state.pipeline[0].name; \n            \n            switch (name) {\n\n              case 'Page':\n                return <Page advance={this.getLatestState}/>;\n\n              case 'RandomExample':\n                return <RandomExample advance={this.getLatestState}/>;\n\n              case 'LoadMTurk':\n                return <LoadMTurk advance={this.getLatestState}/>;\n\n              case 'SubmitMTurk':\n                return <SubmitMTurk advance={this.getLatestState}/>;\n\n              case 'Survey':\n                return <Survey advance={this.getLatestState}/>;\n\n              // Add more components here :)\n\n              default:\n                return <p>Unknown component!</p>;\n            }\n          })()}\n        </div>\n      );\n    }   \n}\n\n\nexport default Start;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Page.js",["48"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass Page extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {\n        const url = window.location.href.split('?')[0];          \n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data);\n        })      \n    }\n\n    render() {\n      if (this.state.pipeline == undefined) return <p>Loading...</p>;      \n      const data = this.state.pipeline[0].data;\n      return (\n        <div>            \n            <h1>{data.title}</h1>            \n            <p>{data.description}</p>\n            <Button onClick={this.popComponent} variant=\"contained\" color=\"primary\">{data.button_name}</Button>            \n        </div>\n      );\n    }    \n\n    popComponent = () => {\n        const url = window.location.href.split('?')[0];            \n        axios.post(url+ \"/update\", \n        Object.assign({}, this.state, {instruction: 'advance'})).then(res => {\n            this.setState(res.data);             \n            this.props.advance();             \n        })\n    }\n}\n\n\nexport default Page;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/LoadMTurk.js",[],"/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/RandomExample.js",["49"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass RandomExample extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n        // const url = window.location.href;            \n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data);\n        })      \n    }\n\n    render() {\n\n      if (this.state.pipeline == undefined) return <p>Loading...</p>;     \n\n      const data = this.state.pipeline[0].data;\n\n      return (                    \n        <Button onClick={this.printInBackend} variant=\"contained\" color=\"primary\">{data.button_name}</Button>        \n      );\n    }    \n\n    printInBackend = () => {        \n        // const url = window.location.href;    \n        const url = window.location.href.split('?')[0];        \n        axios.post(url+ \"/update\", Object.assign({}, this.state, {instruction: 'print'})).then(res => {\n            this.setState(res.data);                     \n        })\n    }\n}\n\n\nexport default RandomExample; //here","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/SubmitMTurk.js",["50"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\n\nclass SubmitMTurk extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount() {      \n        this.setState({complete: false});\n        // const url = window.location.href;            \n        const url = window.location.href.split('?')[0];\n        axios.get(url+ \"/init\").then(res => {\n            this.setState(res.data, function() {\n                this.notifyBackendToCompleteTask();\n            });            \n        })      \n    }\n\n    render() {\n        if (this.state.pipeline == undefined) return <p>Loading...</p>;\n        return (\n            <form name=\"mturk_form\" method=\"post\" id=\"mturk_form\" action={this.state.mturk.end_point}>\n                <input type=\"hidden\" value={this.state.mturk.assignment_id} name=\"assignmentId\" id={this.state.mturk.assignment_id}/>\n                <input type=\"hidden\" value='foo' name=\"bar\"/>\n                <input type=\"hidden\" value={this.state.mturk.end_point} name = \"end_point\"/>\n                <Button type=\"submit\">Click here to finish task</Button>\n            </form>\n        );     \n    }\n\n    notifyBackendToCompleteTask = () => {        \n        const url = window.location.href.split('?')[0]; \n        axios.post(url+ \"/update\",\n        Object.assign({}, this.state, {instruction: 'mark_complete', complete: true})).then(res => {            \n            this.setState(res.data);            \n        })\n    }\n}\n\n\nexport default SubmitMTurk;","/Users/josharnold/Desktop/CrowdSourceFrameworkII/app/react_app/src/Survey.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":41,"column":37,"nodeType":"62","messageId":"63","endLine":41,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":21,"column":31,"nodeType":"62","messageId":"63","endLine":21,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":23,"column":31,"nodeType":"62","messageId":"63","endLine":23,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":25,"column":33,"nodeType":"62","messageId":"63","endLine":25,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":22,"column":33,"nodeType":"62","messageId":"63","endLine":22,"endColumn":35},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]